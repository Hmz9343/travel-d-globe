import java.util.*;
public class sortArrayinGivenOrder{
	public static void main(String[] args) {
		
		Scanner sc=new Scanner(System.in);
		
		int n=sc.nextInt();
		
		int arr[]=new int[n];
		for(int i=0;i<n;i++){
			arr[i]=sc.nextInt();
		}

		int order=0;

		for(int i=0;i<n-1;i++){
			if(order==0){
				if(arr[i]>arr[i+1]){
					swap(arr,i);
				}
				order=1;
			}else{
				if(arr[i]<arr[i+1]){
					swap(arr,i);
				}
				order=0;
			}
		}

		for(int i=0;i<n;i++){
			System.out.print(arr[i]+" ");
		}
		System.out.println();
	}
	static void swap(int arr[],int i){
		int temp=arr[i];
		arr[i]=arr[i+1];
		arr[i+1]=temp;
	}
}
/* Approach: 1.Compare each element with its neighbouring one.
	2. take a variable to track the order , if variable is 0 then increment order, if variable is 1 then descending order.
	3. O(n) TIme Complexity 
		O(1) Time Complexity
	4. Code is verified with the given test cases:
	Input list =[1,4,7,9,1,3,5,10,11]
	Output = 1, 7, 4, 9, 1, 5, 3, 11, 10
	Different Outputs can be possible for same Input
	*/
